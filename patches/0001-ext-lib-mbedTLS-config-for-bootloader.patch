From 94f45d7c4d3ea7e1e3a929aa6d68eaebefb35ae5 Mon Sep 17 00:00:00 2001
From: David Brown <david.brown@linaro.org>
Date: Mon, 21 Nov 2016 11:39:18 -0700
Subject: [PATCH] ext/lib: mbedTLS config for bootloader

The bootloader has specific needs from mbedTLS to be able to verify
signatures.  Create a custom config file that only enables what we need
for this functionality.

Change-Id: I785b490c209992be26f7294427d0d2fc2666b21e
Signed-off-by: David Brown <david.brown@linaro.org>
---
 ext/lib/crypto/mbedtls/configs/config-boot.h | 99 ++++++++++++++++++++++++++++
 1 file changed, 99 insertions(+)
 create mode 100644 ext/lib/crypto/mbedtls/configs/config-boot.h

diff --git a/ext/lib/crypto/mbedtls/configs/config-boot.h b/ext/lib/crypto/mbedtls/configs/config-boot.h
new file mode 100644
index 0000000..699f40a
--- /dev/null
+++ b/ext/lib/crypto/mbedtls/configs/config-boot.h
@@ -0,0 +1,99 @@
+/*
+ *  Minimal configuration for using TLS in the bootloader
+ *
+ *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
+ *  Copyright (C) 2016, Linaro Ltd
+ *  SPDX-License-Identifier: Apache-2.0
+ *
+ *  Licensed under the Apache License, Version 2.0 (the "License"); you may
+ *  not use this file except in compliance with the License.
+ *  You may obtain a copy of the License at
+ *
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+ *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ *
+ *  This file is part of mbed TLS (https://tls.mbed.org)
+ */
+
+/*
+ * Minimal configuration for using TLS in the bootloader
+ *
+ * - RSA or ECDSA signature verification
+ */
+
+#ifndef MBEDTLS_CONFIG_H
+#define MBEDTLS_CONFIG_H
+
+/* TODO: Configure this between app and target.  Really, we want the
+ * config to come from the app. */
+#define CONFIG_BOOT_VERIFY_RSA_SIGNATURE
+
+/* System support */
+#define MBEDTLS_PLATFORM_C
+#define MBEDTLS_PLATFORM_MEMORY
+#define MBEDTLS_MEMORY_BUFFER_ALLOC_C
+#define MBEDTLS_PLATFORM_NO_STD_FUNCTIONS
+#define MBEDTLS_PLATFORM_EXIT_ALT
+#define MBEDTLS_NO_PLATFORM_ENTROPY
+#define MBEDTLS_NO_DEFAULT_ENTROPY_SOURCES
+#define MBEDTLS_PLATFORM_PRINTF_ALT
+#define MBEDTLS_HAVE_TIME
+#define MBEDTLS_PLATFORM_TIME_TYPE_MACRO int
+
+#if !defined(CONFIG_ARM)
+#define MBEDTLS_HAVE_ASM
+#endif
+
+#if defined(CONFIG_MBEDTLS_TEST)
+#define MBEDTLS_SELF_TEST
+#define MBEDTLS_DEBUG_C
+#else
+#define MBEDTLS_ENTROPY_C
+#define MBEDTLS_TEST_NULL_ENTROPY
+#endif
+
+/* mbed TLS feature support */
+#ifdef CONFIG_BOOT_VERIFY_ECDSA_SIGNATURE
+#define MBEDTLS_ECP_DP_SECP256R1_ENABLED
+#define MBEDTLS_ECP_DP_SECP224R1_ENABLED
+#define MBEDTLS_ECP_NIST_OPTIM
+#define MBEDTLS_ECDSA_C
+#define MBEDTLS_ECDH_C
+#define MBEDTLS_ECP_C
+#endif
+
+#ifdef CONFIG_BOOT_VERIFY_RSA_SIGNATURE
+#define MBEDTLS_RSA_C
+#define MBEDTLS_PKCS1_V15
+#endif
+
+/* mbed TLS modules */
+#define MBEDTLS_ASN1_PARSE_C
+#define MBEDTLS_ASN1_WRITE_C
+#define MBEDTLS_BIGNUM_C
+#define MBEDTLS_MD_C
+#define MBEDTLS_OID_C
+#define MBEDTLS_SHA256_C
+
+/* Save RAM by adjusting to our exact needs */
+#ifdef CONFIG_BOOT_VERIFY_RSA_SIGNATURE
+#define MBEDTLS_ECP_MAX_BITS             2048
+#define MBEDTLS_MPI_MAX_SIZE              256
+#else
+#define MBEDTLS_ECP_MAX_BITS             256
+#define MBEDTLS_MPI_MAX_SIZE              32 // 256 bits is 32 bytes
+#endif
+
+#define MBEDTLS_SSL_MAX_CONTENT_LEN 1024
+
+/* Save ROM and a few bytes of RAM by specifying our own ciphersuite list */
+#define MBEDTLS_SSL_CIPHERSUITES MBEDTLS_TLS_ECJPAKE_WITH_AES_128_CCM_8
+
+#include "mbedtls/check_config.h"
+
+#endif /* MBEDTLS_CONFIG_H */
-- 
2.7.4

